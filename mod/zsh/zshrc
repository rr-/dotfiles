SOURCE=$(readlink ${(%):-%N})
DIR=${SOURCE:h:h:h}
HOST=$(hostname)

# autocomplete
autoload -Uz compinit                   # initialize autocompletion engine
compinit -i                             # initialize autocompletion engine (2)
zstyle ':completion:*' matcher-list \
    'm:{a-zA-Z}={A-Za-z}'              `# case insensitive` \
    '+l:|=* r:|=*'                      # recursive
setopt NO_NOMATCH                       # if extended glob fails, run cmd as-is
setopt NO_CASE_GLOB                     # ignore case in glob searches
setopt nullglob                         # nonexisting wildcards expand to ''

# miscellaneous
unsetopt beep                           # disable beep on errors
setopt rcquotes                         # fix fucking escape quoting
setopt correct                          # enable [nyae] correction
setopt auto_cd                          # "cd /usr/" becomes "/usr/"
setopt nocasematch                      # regex should work case-insensitive
setopt magic_equal_subst                # enable path autocompletion after =
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'      # what kill-word should delete

# history
export HISTFILE=~/.config/zsh/history   # set path to history file
export HISTSIZE=10000                   # how many entries in history (memory)
export SAVEHIST=10000                   # how many entries in history (hdd)
export HISTORY_IGNORE='(yum|tmp|gel)'   # don't remember certain commands
setopt appendhistory                    # append lines (for concurrent sessions)
setopt HIST_IGNORE_ALL_DUPS             # ignore even interleaved duplicates

# basic key bindings for interactive shells
if [[ $- == *i* ]]; then
    bindkey -e                              # use Emacs keybindings
    stty -ixon                              # reclaim ctrl+q for Vim
    stty stop undef                         # reclaim ctrl+s for Vim
fi

# key bindings for terminal emulator
if [ "$TERM" =~ rxvt ]; then
    bindkey "\e[3~"   delete-char           # delete
    bindkey '\e[1~'   beginning-of-line     # home and ctrl+home
    bindkey '\e[4~'   end-of-line           # end and ctrl+end
    bindkey '^H'      backward-kill-word    # ctrl+backspace
    bindkey "^[3^"    kill-word             # ctrl+delete
    bindkey '\eOd'    backward-word         # ctrl+left
    bindkey '\eOc'    forward-word          # ctrl+right

    bindkey '\e[1;5I' 'beep'                # disable ctrl+tab
    bindkey '\e[1;6I' 'beep'                # disable ctrl+shift+tab
else
    bindkey "\e[3~"   delete-char           # delete
    bindkey '\eOH'    beginning-of-line     # home
    bindkey '\eOF'    end-of-line           # end
    bindkey ';5H'     beginning-of-line     # ctrl+home
    bindkey ';5F'     end-of-line           # ctrl+end
    bindkey '^_'      backward-kill-word    # ctrl+backspace
    bindkey "\e[3;5~" kill-word             # ctrl+delete
    bindkey ';5D'     backward-word         # ctrl+left
    bindkey ';5C'     forward-word          # ctrl+right

    bindkey '\e[1;5I' 'beep'                # disable ctrl+tab
    bindkey '\e[1;6I' 'beep'                # disable ctrl+shift+tab
fi

    # necessary for the above to work
    if [[ -n ${terminfo[smkx]} ]] && [[ -n ${terminfo[rmkx]} ]]; then
        function zle-line-init () {
            echoti smkx
        }
        function zle-line-finish () {
            echoti rmkx
        }
        zle -N zle-line-init
        zle -N zle-line-finish
    fi

# cool command prompt
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    PS1=$'%{\e[0;36m%}'
else
    PS1=$'%{\e[1;31m%}'
fi
PS1+='%n@%M'                           # user@host
PS1+=$'%{\e[0;37m%}:'                  # :
PS1+=$'%{\e[0;32m%}%~'                 # path relative to $HOME
PS1+=$'%(?.%{\e[0;37m%}.%{\e[1;31m%})$ ' # colored $ depending on last exit code
PS1+=$'%{\e[0m%}'                      # reset colors
if [[ "$TERM" != linux ]]; then
    PS1+=$'%{\e]0;%n@%M:%~\007%}'          # add titlebar user@host:~/
fi

# aliases related to colors
if [[ -x "`whence -p dircolors`" ]]; then
    eval `dircolors`
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# aliases
alias ls="`whence ls`"' -vF1 --group-directories-first'
alias ll="`whence ls`"' -lX --group-directories-first'
alias la="`whence ls`"' -lXA --group-directories-first'
alias lc="`whence ls`"' -lXC --group-directories-first'
jisho() {
    command jisho "$@"|less -rFX
}
tl() {
    source="$1"; shift
    target="$1"; shift
    trans -s "$source" -t "$target" "$@"|less -rFX
}
alias plen='tl pl en'
alias enpl='tl en pl'
alias enja='tl en ja'
alias jaen='tl ja en'
alias isvim='ps ux|grep vim|grep -v grep' # also works for nvim
alias dark='lightness dark'
alias light='lightness light'
alias yum=ul-yume
alias gel=ul-gelbooru
alias tmp=ul-tmp
vb() {
    dec vm
    vboxsdl --startvm $(VBoxManage list vms |pcregrep -o1 '(?:")(.*)(?:")') &
    disown
}

# legacy aliases
command -v hd >/dev/null 2>&1 || alias hd='od -Ax -t x1'
if ! command -v poweroff >/dev/null 2>&1; then
    [[ $(uname) =~ cygwin ]] && alias poweroff='shutdown /p /f' || alias poweroff='shutdown -s now'
fi
if ! command -v reboot >/dev/null 2>&1; then
    [[ $(uname) =~ cygwin ]] && alias reboot='shutdown /r /t 0 /f' || alias reboot='shutdown -r now'
fi

# colorful manpages
man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    LESS='-j 8' \
    man "$@"
}

# path
path=(~/.local/bin/ $path)              # python!
path=(~/.gem/ruby/*/bin $path)          # ruby!
path=(/usr/local/bin $path)             # prefer manually compiled libraries
path=($DIR/bin/* $path)                 # PATH for all the goodies in this repo
export PATH                             # export modified var for subprocesses

export LD_LIBRARY_PATH=/usr/local/lib

typeset -T PYTHONPATH pythonpath :      # turn PYTHONPATH into zsh list
if [ -d $DIR/lib ]; then                # shared libraries for Python scripts
    pythonpath=($DIR/lib/)
fi
export PYTHONPATH                       # export modified var for subprocesses

# load additional modules
for x in ~/.config/zsh/*.sh; do
    source "$x"
done &>/dev/null

# config fzf
if [ -f ~/.fzf.zsh ]; then
    export FZF_DEFAULT_COMMAND='ag -g ""'
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --inline-info --color=light"
    source ~/.fzf.zsh
    bindkey '\C-t' transpose-chars
    bindkey '\C-o' fzf-file-widget
fi
