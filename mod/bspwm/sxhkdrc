#
# executing various programs
#

# dmenu (a program launcher)
super + {r, d}
    dmenu_run

super + space
    switch_keyboard_layout

# local terminal
alt + ctrl + bracketleft
    run-or-raise -cn local_terminal -p "urxvt -name local_terminal -e zsh -ilc 'tmux new-session -As work'"

super + Return
    xdotool search --classname local_terminal windowactivate; \
    if [ $? -ne 0 ]; then; \
        urxvt -name local_terminal -e zsh -ilc 'if tmux has-session -t work &>/dev/null; then tmux new-window -t work:; tmux attach-session -t work; else tmux new-session -s work; fi'; \
    else; \
        tmux new-window -t work; \
    fi

alt + ctrl + shift + bracketleft
    urxvt

# remote terminal
alt + ctrl + bracketright
    run-or-raise -cn remote_terminal -p "urxvt -name remote_terminal -e zsh -ilc 'ssh cyclone -t "'"zsh -ilc tmux\ new-session\ -As\ work"'"'"

alt + ctrl + shift + bracketright
    urxvt -e zsh -ilc 'ssh cyclone'

# irc
alt + ctrl + m
    run-or-raise -cn remote_irc -p "urxvt -name remote_irc -e zsh -ilc 'ssh cyclone -t "'"zsh -ilc tmux\ a\ -t\ irc"'"'"

alt + ctrl + shift + m
    run-or-raise -cn remote_irc -p "urxvt -name remote_irc -e zsh -ilc 'ssh cyclone -t "'"zsh -ilc tmux\ a\ -d\ -t\ irc"'"'"

# web browser
alt + ctrl + semicolon
    run-or-raise -n 'Mozilla Firefox|Vimperator|Qutebrowser' -p "xdg-open 'about:blank'"

# text editor
alt + ctrl + shift + n
    urxvt -e zsh -ilc vim

# file manager
super + e
    run-or-raise -cn local_terminal -p "urxvt -name local_terminal -e zsh -ilc 'tmux new-session -As work'"; \
    tmux select-window -t work:vifm || tmux new-window -t work: -n vifm vifm



#
# music and audio
#

# volume up and down
super + {x,X}
    amixer -q set Master 1%{+,-} unmute

# previous and next track
super + {c,C}
    mpc {next,prev}

# toggle play
super + v
    mpc toggle

super + V
    zsh -i -l -c 'mpc|head -n1|clip'

# seek backward and forward
alt + shift + ctrl + {Left,Right}
    mpc seek {-,+}10



#
# window manager
#

# widen/shrink current window
super + w
    bspc node {@west -r -50,@south -r +50, @north -r -50, @east -r +50}
super + W
    bspc node {@west -r +50,@south -r -50, @north -r +50, @east -r -50}

# transparency
super + {button5,button4}
    compton-trans -c {-,+}5
super + {z,Z}
    compton-trans -c {-,+}5

# exit bpswm
super + shift + q
    bspc quit

# close active window
super + q
    bspc node -c

# send active window to given another workspace
super + shift + {grave,1-9,0,minus}
    TARGET={IM,1-9,10,IM}; \
    ID=$(xdo id); \
    bspc node -d $TARGET && bspc node -f $ID

# focus workspace
super + {grave,1-9,0,minus}
    bspc desktop -f {IM,1-9,10,IM}

# focus window in given direction
super + {h,j,k,l}
    DIR={west,south,north,east}; \
    bspc node -f $DIR || ( bspc monitor -f $DIR; bspc node -f @/1.floating )

# swap window with another one in given direction
super + shift + {h,j,k,l}
    bspc node -s {west,south,north,east}.local

# set current window as floating
super + s
    bash -c '~/.config/bspwm/toggle-state floating'

# set current window as fullscreen
super + f
    bash -c '~/.config/bspwm/toggle-state fullscreen'

super + shift + f
    bspc desktop -l {tiled,monocle}

super + o
    if test $(bspc config -d focused window_gap) -eq 0; then; \
        bspc config -d focused window_gap $BSPC_WINDOW_GAP; \
    else; \
        bspc config -d focused window_gap 0; \
    fi

super + shift + o
    if test $(bspc config -d focused border_width) -eq 0; then; \
        bspc config -d focused border_width $BSPC_BORDER_WIDTH; \
    else; \
        bspc config -d focused border_width 0; \
    fi

# focus window with regard to focus history
super + {bracketleft,bracketright}
    bspc control --record-history off; \
    bspc node {older,newer} -f; \
    bspc control --record-history on

Scroll_Lock
    zsh -i -l -c 'arrows toggle' >/tmp/tmp

# reload sxhkd configuration
alt + F12
    bash -c '~/.config/bspwm/bspwmrc'

# screenshots
super + i
    bash -c 'shot -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
super + shift + i
    bash -c 'shot -W -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
super + alt + i
    bash -c 'shot -M -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
