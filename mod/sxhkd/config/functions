run_or_raise()
{
    # If an X11 program is running, bring it to front,
    # otherwise execute it in new process

    type=
    match=
    program=
    on_raise=

    while [[ $# > 0 ]]
    do
        key=$1
        case $key in
            -n|--name)
                shift
                type=name
                match=$1
                ;;
            -c|--class)
                shift
                type=class
                match=$1
                ;;
            -cn|--classname)
                shift
                type=classname
                match=$1
                ;;
            -p|--program)
                shift
                program=$1
                ;;
            --on-raise)
                shift
                on_raise=$1
                ;;
            *)
                echo "Unknown option: $key"
                exit 1
                ;;
        esac
        shift
    done

    window=$(xdotool search --$type "$match" | head -1)
    if [ -z "$window" ]; then
        eval "$program" &
    else
        eval "$on_raise" &
    fi
    xdotool search --sync --$type "$match" windowactivate
}

toggle_state()
{
    state=$(bspc query -T -n|python -c 'import json,sys;print(json.loads(sys.stdin.read())["client"]["state"])')
    if [ "$state" == "$1" ]; then
        bspc node -t tiled -l normal
    else
        xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" $(xdo id -a panel)
        if [ "$?" == '0' ]; then
            bspc node -t "$1" -l normal
        else
            bspc node -t "$1" -l above
        fi
    fi
}
