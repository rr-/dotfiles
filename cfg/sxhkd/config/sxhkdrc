#
# executing various programs
#

# dmenu (a program launcher)
super + {r, d}
    dmenu_run

# switch Polishâ†”Japanese
super + n
    kb

# lock screen
alt + ctrl + shift + l
    i3lock -c 000000

# focus or spawn local tmux
alt + ctrl + bracketleft
    xdotool search --classname local_terminal windowactivate; \
    if [ $? -ne 0 ]; then; \
        urxvt -name local_terminal -e zsh -ilc 'tmux attach-session || tmux new-session'; \
    else; \
        tmux new-window -t work; \
    fi

# spawn plain terminal
alt + ctrl + shift + bracketleft
    urxvt

# focus or spawn irc
alt + ctrl + m
    run_or_raise -cn drizzle -p "urxvt -name drizzle -e zsh -ilc 'ssh drizzle -t "'"zsh -ilc tmux\ attach\ -t\ main"'"'"

# focus or spawn irc, and detach all other sessions
alt + ctrl + shift + m
    run_or_raise -cn drizzle -p "urxvt -name drizzle -e zsh -ilc 'ssh drizzle -t "'"zsh -ilc tmux\ attach\ -d\ -t\ main"'"'"

# spawn web browser
alt + ctrl + semicolon
    run_or_raise -n 'Qutebrowser' -p "xdg-open 'about:blank'"



#
# music and audio
#

# volume up and down
super + {x,X}
    dir={+,-}; \
    amixer -D pulse set Master 1%$dir unmute

# previous and next track
super + {c,C}
    CMD={nextfile,prevfile}; \
    mpvmc $CMD

# toggle play
super + v
    mpvmc toggle

# copy current song title to clipboard
super + V
    zsh -ilc 'mpvmc info --short|clip'

# toggle random
super + b
    mpvmc random toggle

# seek backward and forward
super + {less,greater}
    NUM={-,+}10; \
    mpvmc seek "$NUM"



#
# window manager
#

# transparency
super + {button5,button4}
    compton-trans -c {-,+}5
super + {z,Z}
    compton-trans -c {-,+}5

# close active window
super + q
    bspc node -c

# send active window to given another workspace
super + shift + {grave,1-9,0,minus}
    TARGET={IM,1-9,10,IM}; \
    ID=$(xdotool getactivewindow); \
    bspc node -d $TARGET && bspc node -f $ID

# focus workspace
super + {grave,1-9,0,minus}
    bspc desktop -f {IM,1-9,10,IM}

# focus window in given direction
super + {h,j,k,l}
    DIR={west,south,north,east}; \
    bspc node -f $DIR || ( bspc monitor -f $DIR; bspc node -f @/1.floating )

# swap window with another one in given direction
super + shift + {h,j,k,l}
    bspc node -s {west,south,north,east}.local

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# set current window as floating
super + s
    toggle_state floating

# set current window as fullscreen
super + f
    toggle_state fullscreen

# cycle between desktop layouts
super + shift + f
    bspc desktop -l {tiled,monocle}

# toggle window gaps
super + o
    if test $(bspc config window_gap) -eq 0; then; \
        bspc config window_gap $(cat /tmp/bspc_window_gap); \
    else; \
        bspc config window_gap >/tmp/bspc_window_gap; \
        bspc config window_gap 0; \
    fi

# toggle window borders
super + shift + o
    if test $(bspc config border_width) -eq 0; then; \
        bspc config border_width $(cat /tmp/bspc_border_width); \
    else; \
        bspc config border_width >/tmp/bspc_border_width; \
        bspc config border_width 0; \
    fi

# focus window with regard to focus history
super + {bracketleft,bracketright}
    bspc control --record-history off; \
    bspc node {older,newer} -f; \
    bspc control --record-history on

# reload sxhkd configuration
alt + F12
    killall -SIGUSR1 sxhkd

alt + shift + F12
    bash -c '~/.config/bspwm/bspwmrc'; \
    bash -c '~/.config/x/start-panel.sh'

# screenshots
super + i
    bash -c 'shot -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
super + shift + i
    bash -c 'shot -W -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
super + alt + i
    bash -c 'shot -M -i --output ~/ && mpv ~/.local/share/beep-shot.mp3'
