# autocomplete
autoload -Uz compinit                   # initialize autocompletion engine
compinit -i                             # initialize autocompletion engine (2)
zstyle ':completion:*' matcher-list \
    'm:{a-zA-Z}={A-Za-z}' \
    '+l:|=* r:|=*'                      # recursive
setopt NO_NOMATCH                       # if extended glob fails, run cmd as-is
setopt NO_CASE_GLOB                     # ignore case in glob searches
setopt nullglob                         # nonexisting wildcards expand to ''
source ~/.zprofile

# miscellaneous
unsetopt beep                           # disable beep on errors
setopt correct                          # enable [nyae] correction
setopt auto_cd                          # "cd /usr/" becomes "/usr/"
setopt nocasematch                      # regex should work case-insensitive
setopt magic_equal_subst                # enable path autocompletion after =
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'      # what kill-word should delete

# history
HISTFILE=~/.config/zsh/history  # where to put the history
HISTSIZE=5000                   # how many entries in history (memory)
SAVEHIST=$HISTSIZE              # how many entries in history (hdd)
setopt appendhistory            # append lines (for concurrent sessions)
setopt extended_history         # record usage timestamps in the histfile
setopt inc_append_history       # write to the histfile immediately
setopt share_history            # share history between all sessions
setopt hist_ignore_all_dups     # delete old entry if new entry is a duplicate
setopt hist_find_no_dups        # do not display a line previously found
setopt hist_ignore_space        # discard entries that start with space
setopt hist_save_no_dups        # don't write duplicate entries in the histfile
setopt hist_reduce_blanks       # remove extra blanks before recording entry
setopt hist_verify              # don't execute immediately upon expansion

# don't remember certain commands
HISTORY_IGNORE="(plen*|enpl*|jaen*|tl*|edict*|reverso*|glosbe*|sjp*|urban*|rg*|git*)"
zshaddhistory() {
  emulate -L zsh
  [[ $1 != ${~HISTORY_IGNORE} ]]
}

# basic key bindings for interactive shells
if [[ $- == *i* ]]; then
    bindkey -e                # use Emacs keybindings
    bindkey "\e" vi-cmd-mode  # ...but allow going to Vi mode
    export KEYTIMEOUT=1       # ...and don't block other hotkeys for too long
    stty -ixon                # reclaim ctrl+q for Neovim
    stty stop undef           # reclaim ctrl+s for Neovim
fi

# key bindings for terminal emulator
if [ "$TERM" =~ rxvt ]; then
    bindkey "\e[3~"   delete-char         # delete
    bindkey '\e[1~'   beginning-of-line   # home and ctrl+home
    bindkey '\e[4~'   end-of-line         # end and ctrl+end
    bindkey '^H'      backward-kill-word  # ctrl+backspace
    bindkey "^[3^"    kill-word           # ctrl+delete
    bindkey '\eOd'    backward-word       # ctrl+left
    bindkey '\eOc'    forward-word        # ctrl+right

    bindkey '\e[1;5I' 'beep'              # disable ctrl+tab
    bindkey '\e[1;6I' 'beep'              # disable ctrl+shift+tab
else
    bindkey "\e[3~"   delete-char         # delete
    bindkey '\eOH'    beginning-of-line   # home
    bindkey '\eOF'    end-of-line         # end
    bindkey ';5H'     beginning-of-line   # ctrl+home
    bindkey ';5F'     end-of-line         # ctrl+end
    bindkey '^_'      backward-kill-word  # ctrl+backspace
    bindkey "\e[3;5~" kill-word           # ctrl+delete
    bindkey ';5D'     backward-word       # ctrl+left
    bindkey ';5C'     forward-word        # ctrl+right

    bindkey '\e[1;5I' 'beep'              # disable ctrl+tab
    bindkey '\e[1;6I' 'beep'              # disable ctrl+shift+tab
fi

# command prompt
function make_ps1 () {
    case $(hostname) in
        drizzle) PS1='%F{75}';;
        cyclone) PS1='%F{162}';;
        aurora) PS1='%F{215}';;
        oldcastle) PS1='%F{150}';;
        tornado) PS1='%F{203}';;
        stx*) PS1='%F{156}';;
        *) PS1='%F{145}';;
    esac

    # user@host
    PS1+='%n@%M'

    # colon
    PS1+="%F{7}:"

    # path relative to $HOME
    PS1+="%F{2}%~"

    # colored $ depending on last exit code
    PS1+=$'%(?.%F{7}.%F{203})$ '

    # reset colors
    PS1+="%f"

    # add titlebar user@host:~/
    if [[ "$TERM" != linux ]]; then
        PS1+=$'%{\e]0;%n@%M:%~\007%}'
    fi
}
make_ps1

# config fzf
if [ -f ~/.fzf.zsh ]; then
    export FZF_DEFAULT_COMMAND='ag -g ""'
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --inline-info --color=dark"
    source ~/.fzf.zsh
    bindkey '\C-o' fzf-file-widget  # choose c-o for file opener
    bindkey '\C-t' transpose-chars  # restore default binding for c-t
fi

# don't be a nag when working with gui via ssh
if [ ! -v DISPLAY ]; then
    export DISPLAY=:0.0
fi

# change cursor for vim insert mode
zle-line-init zle-keymap-select () {
    case $KEYMAP in
        vicmd)
            if [[ $TMUX = '' ]]; then
                echo -ne "\033]12;red\007"
            else
                printf '\033Ptmux;\033\033]12;red\007\033\\'
            fi
            ;;
        viins|main)
            if [[ $TMUX = '' ]]; then
                echo -ne "\033]112\007"
            else
                printf '\033Ptmux;\033\033]112\007\033\\'
            fi
            ;;
    esac
}
zle -N zle-line-init
zle -N zle-keymap-select
