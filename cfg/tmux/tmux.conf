# use c-a as main key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# colors
message_bk=colour150
status_bk=colour235
active_window_bk=colour232
active_window_fg=colour255
inactive_window_bk=colour238
inactive_window_fg=colour250
bell_window_bk=colour173
bell_window_fg=colour232

# apply colors
set -g message-command-style "bg=$message_bk"
set -g message-style "bg=$status_bk fg=$inactive_window_fg"
set -g status-style "bg=$status_bk"
set -g status-left-style "bg=$status_bk fg=$inactive_window_fg"
set -g status-right-style "bg=$status_bk fg=$inactive_window_fg"
setw -g mode-style "bg=$status_bk"
setw -g window-status-current-style "bg=$active_window_bk fg=$active_window_fg"
setw -g window-status-style "bg=$inactive_window_bk fg=$inactive_window_fg"
setw -g window-status-bell-style "bg=$bell_window_bk fg=$bell_window_fg bold"
set -g pane-border-style "bg=colour233 fg=colour240"
set -g pane-active-border-style "bg=colour23 fg=colour25"

# pane borders
set -g pane-border-status top
set -g pane-border-format '#[fg=colour110] #(ps --no-headers -t #{pane_tty} -o args -O-c) #[align=right]#(~/.config/tmux/git-status -p #{pane_current_path})'

# allow vim zen mode to toggle decoration
set -g allow-passthrough on

# renumber windows
set-option -g renumber-windows on

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# don't wait for escape sequences (what are they for anyway)
set -sg escape-time 0

# allow libreadline
bind C-a send-prefix
# use c-a a to cycle between current and last pane
bind a last-pane

# use alt+page up to enter scroll mode
set -g status-keys vi
setw -g mode-keys vi
bind -n M-PPage copy-mode -u
bind -T copy-mode-vi H    send -X start-of-line
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi L    send -X end-of-line
bind -T copy-mode-vi End  send -X end-of-line
bind -T copy-mode-vi v    send -X begin-selection
bind -T copy-mode-vi C-v  send -X rectangle-toggle
bind -T copy-mode-vi y    send -X copy-pipe 'clip'

# use alt+hjkl for moving panes, vim aware
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# use alt+HJKL for resizing panes
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10
# use alt+shift+1..0 to switch to n-th window
bind -n M-! select-window -t 1
bind -n M-@ select-window -t 2
bind -n 'M-#' select-window -t 3
bind -n 'M-$' select-window -t 4
bind -n M-% select-window -t 5
bind -n M-^ select-window -t 6
bind -n M-& select-window -t 7
bind -n M-* select-window -t 8
bind -n M-( select-window -t 9
bind -n M-) select-window -t 10
# easier and faster switching between next/prev window
bind -n M-p previous-window
bind -n M-n next-window
bind C-p previous-window
bind C-n next-window
# move window to left/right
bind Left swap-window -t -1\; select-window -t -1
bind Right swap-window -t +1\; select-window -t +1
# paste from system clipboard
bind ] run-shell "tmux set-buffer \"$(xclip -out -selection clipboard)\"; tmux paste-buffer"

bind N new-session -c ~
unbind w
bind -n F11 choose-tree -ZOname
bind -n F12 choose-tree -ZswOname
bind C-w command-prompt -p "New pane name: " "rename-window '%%'"

# reload configuration with keyboard
bind C-r run-shell ' \
    tmux source-file ~/.tmux.conf > /dev/null; \
    tmux display-message "Sourced .tmux.conf!"'

# split the panes like in vim, and keep cwd
unbind '"'
unbind %
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# create new windows keeping cwd
bind C-c new-window -c "#{pane_current_path}" -a
bind c new-window -c "#{pane_current_path}"

# statusbar configuration
set -g status-position top
set -g status-interval 5
set -g status-left-length 20
set -g status-left '#{host}:#{session_name} '
set -g status-right "%Y-%m-%d %H:%M:%S"
set -g status-right-length 50
setw -g window-status-current-format ' #I:#W '
setw -g window-status-format ' #I:#W '

# enable mouse interaction
set -g mouse on

# synchronize clipboard with buffer
set -s set-clipboard external

# enable 256 color support in various applications
set -g default-terminal "screen-256color"

# increase scrollback size
set -g history-limit 100000

# enable bell activity reporting
set -g bell-action any
set -g visual-bell off

# after killing a session, switch to the next available session
set-option -g detach-on-destroy off

# initialize TMUX plugin manager
run '~/.config/tmux/plugins/tpm/tpm'

# enable true color
set -ga terminal-overrides ",*256col*:Tc"
# allow nvim to change cursor shape
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[ q'

# enable title propagation of selected windows/panes
set -ga set-titles on

# renumber sessions
set-hook -g session-created "run ~/.config/tmux/sessions-hook"
set-hook -g session-closed  "run ~/.config/tmux/sessions-hook"

bind -n C-d if-shell 'test $(tmux list-panes -s | wc -l) -eq 1' 'display-message "not exiting the last shell!"' 'send-keys C-d'
