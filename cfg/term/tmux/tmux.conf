# use c-a as main key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

message_bk=colour150
status_bk=colour235
active_window_bk=colour232
active_window_fg=colour255
inactive_window_bk=colour238
inactive_window_fg=colour250
bell_window_bk=colour173
bell_window_fg=colour232

set -g message-command-bg $message_bk
set -g message-bg $status_bk
set -g message-fg $inactive_window_fg
set -g status-bg $status_bk
set -g status-left-bg $status_bk
set -g status-left-fg $inactive_window_fg
set -g status-right-bg $status_bk
set -g status-right-fg $inactive_window_fg
set -g status-right-length 50
setw -g mode-bg $status_bk
setw -g window-status-current-bg $active_window_bk
setw -g window-status-current-fg $active_window_fg
setw -g window-status-bg $inactive_window_bk
setw -g window-status-fg $inactive_window_fg
setw -g window-status-bell-bg $bell_window_bk
setw -g window-status-bell-fg $bell_window_fg
setw -g window-status-bell-attr 'bold'

# renumber windows
set-option -g renumber-windows on

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# don't wait for escape sequences (what are they for anyway)
set -sg escape-time 0

# allow libreadline
bind C-a send-prefix
# use c-a a to cycle between current and last pane
bind a last-pane

# use alt+page up to enter scroll mode
set -g status-keys vi
setw -g mode-keys vi
bind -n M-PPage copy-mode -u
bind -T copy-mode-vi H    send -X start-of-line
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi L    send -X end-of-line
bind -T copy-mode-vi End  send -X end-of-line
bind -T copy-mode-vi v    send -X begin-selection
bind -T copy-mode-vi C-v  send -X rectangle-toggle
bind -T copy-mode-vi y    send -X copy-pipe 'clip'

# use alt+hjkl for moving panes, vim aware
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
# use alt+HJKL for resizing panes
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5
# use alt+1..0 to switch to n-th window, unless the active window is irssi
is_irssi='echo "#{pane_current_command}" | grep -iqE "irssi|weechat"'
bind -n M-1 if "$is_irssi" 'send M-1' 'select-window -t 1'
bind -n M-2 if "$is_irssi" 'send M-2' 'select-window -t 2'
bind -n M-3 if "$is_irssi" 'send M-3' 'select-window -t 3'
bind -n M-4 if "$is_irssi" 'send M-4' 'select-window -t 4'
bind -n M-5 if "$is_irssi" 'send M-5' 'select-window -t 5'
bind -n M-6 if "$is_irssi" 'send M-6' 'select-window -t 6'
bind -n M-7 if "$is_irssi" 'send M-7' 'select-window -t 7'
bind -n M-8 if "$is_irssi" 'send M-8' 'select-window -t 8'
bind -n M-9 if "$is_irssi" 'send M-9' 'select-window -t 9'
bind -n M-0 if "$is_irssi" 'send M-0' 'select-window -t 10'
# use alt+shift+1..0 to switch to n-th window
bind -n M-! select-window -t 1
bind -n M-@ select-window -t 2
bind -n 'M-#' select-window -t 3
bind -n 'M-$' select-window -t 4
bind -n M-% select-window -t 5
bind -n M-^ select-window -t 6
bind -n M-& select-window -t 7
bind -n M-* select-window -t 8
bind -n M-( select-window -t 9
bind -n M-) select-window -t 10
# easier and faster switching between next/prev window
bind -n M-p previous-window
bind -n M-n next-window
bind C-p previous-window
bind C-n next-window

bind N new-session

bind C-C new-window -a

# reload configuration with keyboard
bind C-r run-shell ' \
    tmux source-file ~/.tmux.conf > /dev/null; \
    tmux display-message "Sourced .tmux.conf!"'

# copy CWD from current pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# how to split the windows - emulate vim's c-w
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# cycle colors
bind -n F11 new-window '~/.config/tmux/palette.py set light'
bind -n F12 new-window '~/.config/tmux/palette.py set dark'

# set statusbar position to top
set -g status-position top

# show date and time in the status bar
set -g status-right "%d.%m.%Y %H:%M"

# enable mouse interaction
set -g mouse on

# enable 256 color support in various applications
set -g default-terminal "screen-256color"

# increase scrollback size
set -g history-limit 100000

# enable bell activity reporting
set -g bell-action any
set -g visual-bell off

# other design options
set -g status-interval 5
set -g status-left-length 20
set -g status-left '#{host}:#{session_name} '
set -g status-right ' %H:%M '
setw -g window-status-current-format ' #I:#W '
setw -g window-status-format ' #I:#W '

# initialize TMUX plugin manager
run '~/.config/tmux/plugins/tpm/tpm'

# enable true color
set -ga terminal-overrides ",*256col*:Tc"
