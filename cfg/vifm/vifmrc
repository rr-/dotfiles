" vim: filetype=vifm syntax=vim
let $COLORED_LOGS = 1
let $VIFM_SERVER_NAME = v:servername

" don't confirm file removals if they're using trash
set confirm=permdelete

" the command to start vi
if executable('nvim')
    set vicmd=nvim
endif

" never show ..
set dotdirs=

" vifm tells not to change this, so I leave it
set trash

" number of commands to store in the command history
set history=100

" show numbers before each file
set number

" follow links on enter or l.
set followlinks

" run partially entered commands if they're unambiguous
set fastrun

" use version sort in the file list window
set sortnumbers

" maximum number of changes that can be undone
set undolevels=100

" use vim help rather than plain text file
set vimhelp

" don't run executable files by pressing enter
set norunexec

" prefer KB, MB over KiB, MiB
set noiec

" use syscalls, which enables progress tracking for big file operations
set syscalls

" active color scheme
colorscheme dark

" what should be saved automatically between vifm runs
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks

" how to report time
set timefmt=%Y-%m-%d\ %H:%M

" -----------------------------------------------------------------------------
" basic searching
" show list of matches on tab completion in command-line mode
set wildmenu
" ignore case in search patterns unless it contains uppercase characters
set ignorecase
set smartcase
" don't highlight search results automatically
set nohlsearch
" search while typing
set incsearch
" try to leave some space from cursor to upper/lower border in lists
set scrolloff=4
" set custom status line look
set statusline=" î‚±%t%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------
" predefined marks (navigate to these with `[letter])
mark h ~/

" ------------------------------------------------------------------------------
" custom commands
command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! reload :write | restart
command! merge :exec '!cat %"f >%"c.merged' | :normal gvdd
command! xattr :!xattrvi %"f
command! extract for x in %"f; do 7z x -o"${${x##*/}%%.*}" "$x"; done
command! extracth for x in %"f; do 7z x -o. "$x"; done
command! packs for x in %"f; do 7z a "${x##*/}.7z" "$x"; done
command! packz for x in %"f; do 7z a "${x##*/}.zip" "$x"; done
command! ln for x in %"f; do ln -s %d/"$x" %D; done

" ------------------------------------------------------------------------------
" how to open and preview certain file types

filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.webm,*.tif mpi %d --select=%f 2>/dev/null &
filextype * xdg-open %c || nvim %c

" 7z and 7z archives
fileviewer *.7z,*.zip,*.rar,*.iso,*.mdf 7z l %c

" Images
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.webm convert -identify %f -verbose /dev/null

" Directories
fileviewer .*/,*/ tree %f

" anything else will be open using vim (as indicated by vimcmd).

" ------------------------------------------------------------------------------
" Key mappings

" emulate qutebrowser's vertical directory navigation
" (sacrificing easy case conversion)
nnoremap gU <nop>
nnoremap gu :cd ../<CR>
nnoremap gh :cd ~/<CR>
nnoremap g/ :cd /<CR>

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Copy selected files
nnoremap gc :copy<cr>
vnoremap gc :copy<cr>

" Move selected files
nnoremap gm :move<cr>
vnoremap gm :move<cr>

" Faster renaming
nnoremap I cw<c-a>
nnoremap C cw<c-u>
nnoremap A cw

" New tab
nnoremap gn :tabnew<cr>

" Open console in current directory
nnoremap -t :!urxvt &<cr>

" Toggle wrap setting on ,w key
nnoremap -w :set wrap!<cr>

" Copy file to the other pane
nnoremap -c :copy!<cr>
vnoremap -c :copy!<cr>

nnoremap <c-q> :q<cr>

" Clipboard integration
" full path to selected file
nnoremap yp :!echo -n "'"%"c:p:gs!\!/!"'" %i | clip<cr>
" name of selected file
nnoremap yf :!echo -n "'"%"c:gs!\!/!"'" %i | clip<cr>
nnoremap yn :!echo -n "'"%"c:gs!\!/!"'" %i | clip<cr>
" full path to selected file's directory
nnoremap yd :!echo -n "'"%"d:gs!\!/!"'" %i | clip<cr>

" Compatibility with vim vinegar
nnoremap <f3> :cd ..<cr>

" Go to line
nnoremap <cr> :<C-U>if v:count|exe 'norm! '.v:count.'Gl'|else|exe 'norm! l'|endif<CR>
nnoremap l :<C-U>if v:count|exe 'norm! '.v:count.'Gl'|else|exe 'norm! l'|endif<CR>

" Hide junk
filter __pycache__
