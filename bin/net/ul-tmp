#!/usr/bin/env python3.9
# Uploads files to tmp.sakuya.pl via SSH and outputs copyable links

import io
import os
import shlex
import subprocess
import sys
import tarfile
import urllib.parse

BASE_DIR = "/home/rr-/srv/tmp.sakuya.pl/f/"
BASE_URL = "https://tmp.sakuya.pl/f/"
REMOTE_HOST = "drizzle"


def collect_single_file(arg):
    target_name = os.path.basename(arg)
    return (arg, target_name)


def collect_files_from_dir(top):
    for root, _, filenames in os.walk(top):
        for filename in filenames:
            path = os.path.join(root, filename)
            target_name = os.path.relpath(path, top)
            target_name = os.path.join(os.path.basename(top), target_name)
            yield (path, target_name)


def collect_files(args):
    for arg in args:
        if not os.path.exists(arg):
            print("File does not exist: %s" % arg, file=sys.stderr)
            continue
        if os.path.isfile(arg):
            yield collect_single_file(arg)
        elif os.path.isdir(arg):
            for name in collect_files_from_dir(arg):
                yield name


def send(src_paths):
    if not src_paths:
        print("Nothing to send.", file=sys.stderr)
        return

    tar_stream = io.BytesIO()
    tar = tarfile.open(mode="w", fileobj=tar_stream)

    urls = []
    commands = []

    dirs = set()
    for src_path, target_name in src_paths:
        dirs.add(os.path.dirname(os.path.join(BASE_DIR, target_name)))

    for dir_name in dirs:
        commands.append("mkdir -p %s" % shlex.quote(dir_name))
        commands.append("chmod 0755 %s" % shlex.quote(dir_name))

    commands.append("tar x -C %s" % shlex.quote(BASE_DIR))

    for src_path, target_name in src_paths:
        dst_path = os.path.join(BASE_DIR, target_name)
        tar.add(src_path, arcname=target_name)
        commands.append("chmod 0644 %s" % shlex.quote(dst_path))
        urls.append(
            BASE_URL + urllib.parse.quote(target_name.replace("\\", "/"))
        )

    cmdline = ["ssh", REMOTE_HOST, ";".join(commands)]

    proc = subprocess.Popen(
        cmdline,
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
    )
    _, err = proc.communicate(input=tar_stream.getvalue())
    for url in urls:
        print(url)
    if err:
        print(err.decode("utf8"), file=sys.stderr)
        sys.exit(1)


def main():
    send(list(collect_files(sys.argv[1:])))


if __name__ == "__main__":
    main()
