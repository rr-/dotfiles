#!/usr/bin/python3
import os, sys
import shlex
import tarfile
import subprocess
import io

base_dir = '/srv/www/tmp.sakuya.pl/public_html/f/'
base_url = 'http://tmp.sakuya.pl/f/'
remote_host = 'burza'

def collect_single_file(arg):
    target_name = os.path.basename(arg)
    return (arg, target_name)

def collect_files_from_dir(dir):
    for root, dirnames, filenames in os.walk(dir):
        for filename in filenames:
            path = os.path.join(root, filename)
            target_name = os.path.relpath(path, dir)
            target_name = os.path.join(os.path.basename(dir), target_name)
            yield (path, target_name)

def collect_files(args):
    for arg in args:
        if not os.path.exists(arg):
            print('File does not exist: %s' % arg, file=sys.stderr)
            continue
        if os.path.isfile(arg):
            yield collect_single_file(arg)
        elif os.path.isdir(arg):
            for f in collect_files_from_dir(arg):
                yield f

def send(src_paths):
    if not src_paths:
        print('Nothing to send.', file=sys.stderr)
        return

    tar_stream = io.BytesIO()
    tar = tarfile.open(mode='w', fileobj=tar_stream)

    urls = []
    commands = []

    dirs = set()
    for src_path, target_name in src_paths:
        dirs.add(os.path.dirname(os.path.join(base_dir, target_name)))

    for dir in dirs:
        commands.append('mkdir -p %s' % shlex.quote(dir))
        commands.append('chmod 0755 %s' % shlex.quote(dir))

    commands.append('tar x -C %s' % shlex.quote(base_dir))

    for src_path, target_name in src_paths:
        dst_path = os.path.join(base_dir, target_name)
        tar.add(src_path, arcname=target_name)
        commands.append('chmod 0644 %s' % shlex.quote(dst_path))
        urls.append(base_url + target_name.replace('\\', '/'))

    cmdline = ['ssh', remote_host, ';'.join(commands)]

    proc = subprocess.Popen(
        cmdline,
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE)
    out, err = proc.communicate(input=tar_stream.getvalue())
    for url in urls:
        print(url)
    if err:
        print(err.decode('utf8'), file=sys.stderr)
        sys.exit(1)

def main():
    send(list(collect_files(sys.argv[1:])))

if __name__ == '__main__':
    main()
