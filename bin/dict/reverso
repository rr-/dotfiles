#!/usr/bin/python3
import argparse
import re
import urllib.request
import lxml.etree


COLOR_RESET = '\x1B[0m'
COLOR_HIGHLIGHT = '\x1B[38;5;%dm\x1B[48;5;%dm' % (229, 58)

BASE_URL = 'http://context.reverso.net/translation/'
USER_AGENT = (
    'Mozilla/5.0 (X11; Linux x86_64; rv:10.0) Gecko/20100101 Firefox/10.0')


def _parse_args():
    parser = argparse.ArgumentParser(
        description='Looks up phrases on reverso.net')
    parser.add_argument(
        '-n', '--no-conjugations', action='store_false', dest='conjugate')
    parser.add_argument('-l', '--language', default='polish')
    parser.add_argument('phrase', nargs='+')
    return parser.parse_args()


def _format_html(node):
    inner_html = lxml.etree.tostring(node, encoding='unicode')
    inner_html = (
        inner_html
        .replace('<em>', COLOR_HIGHLIGHT)
        .replace('</em>', COLOR_RESET))
    return re.sub('<[^>]*>', '', inner_html).strip()


def _lookup_context_phrase(language, conjugate, phrase):
    url = BASE_URL + 'english-{language}/{phrase}?d={conjugate:d}'.format(
        language=language,
        phrase=urllib.parse.quote(phrase),
        conjugate=conjugate)

    request = urllib.request.Request(
        url=url, headers={'User-Agent': USER_AGENT})

    with urllib.request.urlopen(request) as handle:
        content = handle.read()
        doc = lxml.etree.HTML(content)
        for example_node in doc.cssselect('div.example'):
            src_node = example_node.cssselect('div.src span.text')[0]
            dst_node = example_node.cssselect('div.trg span.text')[0]
            yield (_format_html(src_node), _format_html(dst_node))


def main():
    args = _parse_args()
    results = _lookup_context_phrase(
        args.language, args.conjugate, ' '.join(args.phrase))
    for src, dst in results:
        print(src)
        print(dst)
        print()


if __name__ == '__main__':
    main()
