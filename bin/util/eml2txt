#!/usr/bin/env python3
import argparse
import base64
import email
import pathlib
import re

import eml_parser


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        dest='paths', metavar='path', type=pathlib.Path, nargs='+'
    )
    return parser.parse_args()


def get_body_text(parsed):
    # first search for body in the body, then in the attachments
    for key in ('body', 'attachment'):

        # first look for plain text version, then accept html
        for mime in ('text/plain', 'text/html'):
            for attachment in parsed.get(key, []):
                try:
                    attachment_mime = attachment['mime_type_short']
                except LookupError:
                    try:
                        attachment_mime = (
                            attachment['content_header']['content-type'][0]
                        )
                    except LookupError:
                        attachment_mime = 'application/octet-stream'

                attachment_mime = re.sub(';.*', '', attachment_mime)

                if attachment_mime == mime:
                    try:
                        return attachment['content']
                    except LookupError:
                        return attachment['raw']

    return None


def main():
    args = parse_args()

    for i, path in enumerate(args.paths):
        if i > 0:
            print('-' * 79)
            print()

        raw_email = path.read_bytes()
        message = email.message_from_bytes(raw_email)
        parsed = eml_parser.eml_parser.parse_email(
            message,
            include_raw_body=True,
            include_attachment_data=True)
        text = get_body_text(parsed)

        print('From:    ' + parsed['header']['from'])
        print('To:      ' + ', '.join(parsed['header']['to']))
        print('Subject: ' + parsed['header']['subject'])
        print()
        print(text)


if __name__ == '__main__':
    main()
