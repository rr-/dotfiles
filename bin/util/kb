#!/usr/bin/env python3
# Switches between Polish and Japanese keyboard layout for ibus
# (the default switcher of ibus was too buggy)

import os
import argparse
import typing as T
from subprocess import run, PIPE

import xdg


XMODMAPS: T.List[str] = [
    'keysym equal = equal plus equal plus dead_macron dead_macron',
    'keysym space = space space space space space U200B',
]

LANGUAGES: T.List[T.Tuple[str, str]] = [
    ('pl', 'xkb:pl::pol'),
    ('jp', 'anthy'),
]


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'lang', nargs='?', choices=[item[0] for item in LANGUAGES]
    )
    return parser.parse_args()


def get_code_and_engine(lang: str) -> T.Tuple[str, str]:
    if not lang:
        current_engine = run(
            ['ibus', 'engine'], stdout=PIPE
        ).stdout.decode().strip()

        for i, item in enumerate(LANGUAGES):
            code, engine = item
            if engine == current_engine:
                return LANGUAGES[(i + 1) % len(LANGUAGES)]

    else:
        for code, engine in LANGUAGES:
            if code == lang:
                return (code, engine)

    raise ValueError('Unknown language')


def main() -> None:
    if run(['pgrep', 'ibus-daemon'], stdout=PIPE).returncode != 0:
        print('starting daemon')
        run(os.path.join(xdg.XDG_CONFIG_HOME, 'ibus/start'))

    args = parse_args()

    code, engine = get_code_and_engine(args.lang)

    run(['setxkbmap', code])
    run(['ibus', 'engine', engine])
    for expr in XMODMAPS:
        run(['xmodmap', '-e', expr])


if __name__ == '__main__':
    main()
