#!/usr/bin/env python3
import argparse
import random
import string
from collections.abc import Callable, Iterable

DEFAULT_LENGTH = 12
SPECIAL_CHARS = "_-/"
DEFAULT_ALPHA = string.ascii_letters + string.digits + SPECIAL_CHARS
DEFAULT_REQUIREMENTS = [
    lambda password: count_characters(password, string.ascii_lowercase) > 1,
    lambda password: count_characters(password, string.ascii_uppercase) > 1,
    lambda password: count_characters(password, string.digits) > 1,
    lambda password: count_characters(password, SPECIAL_CHARS) > 1,
]


def count_characters(source: str, characters: str) -> int:
    return len([c for c in source if c in characters])


def get_random_pass(
    length: int, alphabet: str, requirements: Iterable[Callable[[str], bool]]
) -> str:
    while True:
        password = "".join(random.choice(alphabet) for _ in range(length))
        if all(requirement(password) for requirement in requirements):
            return password


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument("-l", "--length", default=DEFAULT_LENGTH, type=int)
    parser.add_argument("-a", "--alphabet", default=DEFAULT_ALPHA)
    return parser.parse_args()


def main() -> None:
    args = parse_args()
    if args.alphabet:
        requirements = []
    else:
        requirements = DEFAULT_REQUIREMENTS
    print(
        get_random_pass(
            length=args.length,
            alphabet=args.alphabet,
            requirements=requirements,
        )
    )


if __name__ == "__main__":
    main()
