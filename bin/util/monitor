#!/usr/bin/env python3
import argparse
import hashlib
import os
import subprocess
import time
from datetime import datetime
from typing import List


def _get_paths(target_paths: List[str]) -> List[str]:
    paths: List[str] = []
    for target_path in target_paths:
        if os.path.isdir(target_path):
            for root, _subdirs, files in os.walk(target_path):
                for file in files:
                    paths.append(os.path.join(root, file))
        else:
            paths.append(target_path)
    paths.sort()
    return paths


def _get_checksum(paths: List[str]) -> str:
    digest = hashlib.md5()
    for path in paths:
        try:
            with open(path, 'rb') as handle:
                digest.update(handle.read())
        except FileNotFoundError:
            pass
    return digest.hexdigest()


def _parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser('Monitor filesystem for changes')
    parser.add_argument('--sleep', default=1, type=int)
    parser.add_argument('-t', '--target-dir', nargs='*')
    parser.add_argument('cmd', metavar='cmd')
    parser.add_argument('cmd_args', metavar='cmd_arg', nargs='*')
    return parser.parse_args()


def main() -> None:
    args = _parse_args()
    target_dirs: List[str] = args.target_dir
    command_line: List[str] = [args.cmd] + args.cmd_args
    sleep_time: int = args.sleep
    last_checksum = None

    while True:
        paths = _get_paths(target_dirs)
        current_checksum = _get_checksum(paths)
        if current_checksum != last_checksum:
            print('Change detected.')
            start = datetime.now()
            subprocess.run(command_line)
            last_checksum = current_checksum
            print('%s: finished in %.02fs' % (
                ' '.join(command_line),
                (datetime.now() - start).total_seconds()))

        time.sleep(sleep_time)


if __name__ == '__main__':
    main()
