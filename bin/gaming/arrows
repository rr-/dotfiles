#!/bin/python3
# for gaming on HHKB

import os
import re
import sys
import argparse
from subprocess import run, PIPE


def _parse_args():
    parser = argparse.ArgumentParser(
        description='Toggles arrow layout on HHKB')
    parser.add_argument('mode', choices=('on', 'off', 'toggle'))
    return parser.parse_args()


def enable():
    print('Enabling')
    if sys.platform == 'cygwin':
        run([
            'cygstart',
            os.path.join(
                os.path.dirname(__file__),
                os.pardir,
                os.pardir,
                'mod-ahk',
                'arrows.ahk')])
    else:
        run(['xmodmap', '-e', 'keycode 33 = Up'])
        run(['xmodmap', '-e', 'keycode 46 = Left'])
        run(['xmodmap', '-e', 'keycode 47 = Down'])
        run(['xmodmap', '-e', 'keycode 48 = Right'])


def disable():
    print('Disabling')
    if sys.platform == 'cygwin':
        import csv
        output = run([
            'tasklist',
            '/fi', 'imagename eq autohotkey.exe',
            '/v', '/fo', 'csv', '/nh'], stdout=PIPE).stdout.read()
        tasks = [row for row in csv.reader(output.splitlines())]
        task = next((task for task in tasks if 'arrows' in task[-1]), None)
        if task:
            pid = task[1]
            run(['taskkill', '/pid', pid])
    else:
        run(['setxkbmap', '-layout', 'pl'])


def is_enabled():
    if sys.platform == 'cygwin':
        raise NotImplementedError()
    else:
        result = run(['xmodmap', '-pke'], stdout=PIPE) \
            .stdout.decode().split('\n')
        keycodes_for_left = [
            l for l in result if re.search(r'\bleft\b', l, re.I)]
        return len(keycodes_for_left) > 1


def main():
    args = _parse_args()

    if args.mode == 'on':
        enable()
    elif args.mode == 'off':
        disable()
    elif args.mode == 'toggle':
        if is_enabled():
            disable()
        else:
            enable()


if __name__ == '__main__':
    main()
