#!/usr/bin/env python3
import argparse
import shlex
import typing as T
from subprocess import CalledProcessError, run

from dotfiles import logging


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--dry-run", action="store_true")
    return parser.parse_args()


def sync(
    source: str,
    dry_run: bool,
    traverse_links: bool = False,
    exclude: T.Optional[T.List[str]] = None,
) -> None:
    source_machine, source_path = source.split(":", 1)
    target_machine = "frost"
    target_path = f"/volume1/data/backup/{source_machine}/"

    logging.info(
        "%s:%s â†’ %s:%s",
        source_machine,
        source_path,
        target_machine,
        target_path,
    )

    target_machine_cmd = [
        "rsync",
        "--progress",
        "--size-only",
        # "--usermap=*:admin",
        # "--groupmap=*:users",
        "--chmod=D=rwxrwxrx,F=rwwr",
        "-r",  # recurse
        "-R",  # keep full paths
        "--delete-excluded",
        "--delete-during",
    ]

    if traverse_links:
        # traverse into symlinks and copy their contents
        target_machine_cmd.append("-L")
    else:
        # copy symlinks as-is
        target_machine_cmd.append("-l")

    if dry_run:
        target_machine_cmd.append("--dry-run")
    if exclude:
        for pattern in exclude:
            target_machine_cmd.append(f"--exclude={pattern}")

    target_machine_cmd += [f"{source_machine}:{source_path}", target_path]

    args = ["ssh", "-A", target_machine] + list(
        map(shlex.quote, target_machine_cmd)
    )

    run(args, check=True)


def main():
    args = parse_args()

    try:
        # main machine config
        sync(
            "lightning:/home/rr-/.tmuxp/",
            dry_run=args.dry_run,
            traverse_links=True,
        )
        sync("lightning:/home/rr-/.local/", dry_run=args.dry_run)
        sync(
            "lightning:/home/rr-/.config/",
            dry_run=args.dry_run,
            exclude=["chromium/", "nvim/", "skypeforlinux/", "discord/"],
        )

        # my work
        sync(
            "lightning:/home/rr-/src/",
            dry_run=args.dry_run,
            exclude=["python_modules/", "node_modules/", "*.pyc"],
        )

        # dedibox
        sync(
            "drizzle:/home/rr-/",
            dry_run=args.dry_run,
            exclude=[
                "/home/rr-/data",
                "/home/rr-/.config/nvim/",
                "yume.pl/db/",
                "python_modules/",
                "node_modules/",
                "*.pyc",
            ],
        )

        # OldCastle
        sync("oc:/home/rr-/", dry_run=args.dry_run, exclude=["*.pyc"])
        sync("oc:/var/log/nginx/", dry_run=args.dry_run, traverse_links=True)

    except CalledProcessError:
        logging.error("Error during sync, aborting")
        exit(1)

    logging.info("Syncing finished without errors")


if __name__ == "__main__":
    main()
